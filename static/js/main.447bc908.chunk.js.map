{"version":3,"sources":["assets/andrew-charney-PZZ31takeSU-unsplash.jpg","assets/profile.jpg","theme.js","Site.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseTheme","createMuiTheme","palette","primary","main","secondary","text","typography","fontFamily","theme","responsiveFontSizes","useStyles","makeStyles","mainContainer","paddingTop","spacing","mainImage","backgroundImage","backgroundSize","backgroundPosition","height","overflow","imageButton","borderColor","color","appBar","backgroundColor","welcomeText","darken","fullHeight","iconButton","profileImage","width","borderRadius","padding","border","removeChildSidePadding","paddingRight","paddingLeft","Site","classes","isSmall","useMediaQuery","breakpoints","only","atLeastMed","up","className","Grid","container","direction","justify","alignItems","wrap","xs","sm","md","item","Typography","variant","align","style","fontWeight","Link","href","IconButton","icon","faLinkedin","size","faGithub","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.447bc908.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/andrew-charney-PZZ31takeSU-unsplash.1b7e14c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.e57d11e3.jpg\";","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nconst baseTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ca7ac3\",\n    },\n    secondary: {\n      main: \"#7a82ab\",\n    },\n    text: {\n      primary: \"#271815\",\n      secondary: \"rgb(236, 236, 236)\",\n    },\n  },\n  typography: {\n    fontFamily: \"Raleway\",\n  },\n});\n\nconst theme = responsiveFontSizes(baseTheme);\n\nexport { theme };\n","import { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Grid,\n  IconButton,\n  Link,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport backgroundImage from \"./assets/andrew-charney-PZZ31takeSU-unsplash.jpg\";\nimport profileImage from \"./assets/profile.jpg\";\nimport {\n  currentCompanyLink,\n  currentCompanyText,\n  githubLink,\n  linkedinLink,\n} from \"./constants\";\nimport { theme } from \"./theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    paddingTop: theme.spacing(4),\n  },\n  mainImage: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n  },\n  imageButton: {\n    borderColor: \"white\",\n    color: \"white\",\n  },\n  appBar: {\n    backgroundColor: \"white\",\n  },\n  welcomeText: {\n    color: \"white\",\n  },\n  darken: {\n    backgroundColor: \"rgba(48, 51, 68, 0.8)\",\n    height: \"calc(100% + 24px)\",\n  },\n  fullHeight: {\n    height: \"100%\",\n  },\n  iconButton: {\n    color: \"inherit\",\n    backgroundColor: \"rgba(236, 236, 236, 0.5)\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(236, 236, 236, 0.3)\",\n    },\n  },\n  profileImage: {\n    backgroundImage: `url(${profileImage})`,\n    backgroundPosition: \"75% 21%\",\n    backgroundSize: 225,\n    height: 100,\n    width: 100,\n    borderRadius: 50,\n    padding: 5,\n    border: `1px solid ${theme.palette.text.secondary}`,\n  },\n  removeChildSidePadding: {\n    \"& > .MuiGrid-item\": {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n}));\n\nfunction Site() {\n  const classes = useStyles(theme);\n  const isSmall = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const atLeastMed = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={classes.mainImage}>\n      <div className={classes.darken}>\n        <Grid\n          className={classes.fullHeight}\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n            spacing={3}\n            xs={7}\n            sm={7}\n            md={12}\n            className={classes.removeChildSidePadding}\n          >\n            <Grid item>\n              <div className={classes.profileImage} />\n            </Grid>\n            <Grid item>\n              <Typography\n                variant=\"h2\"\n                align=\"center\"\n                style={{\n                  color: theme.palette.text.secondary,\n                  fontWeight: 500,\n                }}\n              >\n                Mackenzie Salloum\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              container\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={1}\n            >\n              <Grid item xs={12} md=\"auto\">\n                <Typography\n                  variant=\"h5\"\n                  align={isSmall ? \"left\" : \"center\"}\n                  style={{ color: theme.palette.text.secondary }}\n                >\n                  Software Developer\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm=\"auto\">\n                <Typography\n                  variant=\"h5\"\n                  align=\"center\"\n                  style={{ color: theme.palette.text.secondary }}\n                >\n                  {atLeastMed && \"\\u00A0\\u00A0|\\u00A0\\u00A0\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md=\"auto\">\n                <Typography\n                  variant=\"h5\"\n                  align=\"center\"\n                  style={{ color: theme.palette.text.secondary }}\n                >\n                  ReactJS Enthusiast\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm=\"auto\">\n                <Typography\n                  variant=\"h5\"\n                  align=\"center\"\n                  style={{ color: theme.palette.text.secondary }}\n                >\n                  {atLeastMed && \"\\u00A0\\u00A0|\\u00A0\\u00A0\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md=\"auto\">\n                <Typography\n                  variant=\"h5\"\n                  align={isSmall ? \"right\" : \"center\"}\n                  style={{ color: theme.palette.text.secondary }}\n                >\n                  Employed at{\" \"}\n                  <Link href={currentCompanyLink}>{currentCompanyText}</Link>\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\" spacing={5}>\n              <Grid item>\n                <IconButton href={linkedinLink} className={classes.iconButton}>\n                  <FontAwesomeIcon\n                    icon={faLinkedin}\n                    size=\"lg\"\n                    style={{ width: 32, height: 32 }}\n                  />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <IconButton href={githubLink} className={classes.iconButton}>\n                  <FontAwesomeIcon icon={faGithub} size=\"lg\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Site;\n","export const githubLink = \"https://github.com/mackosx\";\nexport const linkedinLink = \"https://www.linkedin.com/in/mackenzie-salloum/\";\nexport const currentCompanyLink = \"https://tveon.com\";\nexport const currentCompanyText = \"Tveon\";\n","import { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport React from \"react\";\nimport { theme } from \"./theme\";\nimport Site from \"./Site\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Site />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}